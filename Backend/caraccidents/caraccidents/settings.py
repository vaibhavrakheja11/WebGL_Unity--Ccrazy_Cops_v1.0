"""
Django settings for caraccidents project.

Generated by 'django-admin startproject' using Django 2.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import pandas as pd
import datetime
import requests
from io import StringIO
from io import BytesIO

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'cm-d1j_u*gpa*6xq9fr86@gw#*icc-%5p%!3#yx0)^^1559&92'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'graphvisualization',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'caraccidents.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'caraccidents.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True
PROJECT_ROOT   =   os.path.join(os.path.abspath(__file__))
STATIC_ROOT  =   os.path.join(PROJECT_ROOT, 'staticfiles')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
def month_replace(x):
    if x=='UU':
        return -30
    else:
        return x
def age_replace( x):
    if x == 'NN':
        return -30
    elif x == 'UU':
        return -30
    elif x == 'XX':
        return -30
    else: 
        return x


def change_dt(x):

    try:
        
        d = datetime.datetime(int(x['C_YEAR']),int(x['C_MNTH']),1)
        date = d.date()
        
        return date
    except Exception as e:
        
        d = datetime.datetime(1950,1,1)
        date = d.date()
        
        return date

def veh_grp(x):
    try:
        x=float(x)
        if x == 'UU':
            return -1
        elif x == 'XX':
            return -1
        elif int(float(x)) >= 30:
            return 11
        elif int(float(x))<=5:
            return int(float(x))
        elif int(float(x)) < 30:
            return int(int(float(x))//5)+5
        else:
            return -1
    except:
        return -1
STATIC_URL = '/static/'

df = pd.read_csv('dataset.zip')
original_data=df
start_year=2005
start_month=1
end_year=2014
end_month=12
start_date = datetime.datetime(start_year,start_month,1).date()
end_date = datetime.datetime(end_year,end_month,1).date()
original_data['DATETIME']=pd.to_datetime(original_data['DATETIME'])
original_data=original_data[(original_data['DATETIME']>=pd.to_datetime(start_date)) &( original_data['DATETIME']<=pd.to_datetime(end_date))]
STATICFILES_DIRS = (
    os.path.join(PROJECT_ROOT, 'static'),
)

#  Add configuration for static files storage using whitenoise
STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'